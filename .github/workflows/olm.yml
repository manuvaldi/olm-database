name: OLM mirror
on:
  schedule:
    - cron:  '0 5 * * 0'
  workflow_dispatch:
jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.generate-matrix.outputs.versions }}
    steps:
      - name: Generate Matrix
        id: generate-matrix
        run: |
          VERSIONS="[ $(curl -s https://api.github.com/repos/openshift/cincinnati-graph-data/contents/channels | jq .[].name | xargs -n1 echo | grep -e '^stable' | sed 's/\.yaml//g' |awk -F'-' '{print $2}' | sort -u | tail -n5 | awk -vORS=, '{ print " " $1 }' | sed 's/,$/\n/') ]"
          echo ::set-output name=versions::${VERSIONS}
  
  build-catalog:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs:
      - generate_matrix    
    strategy:
      max-parallel: 1
      matrix:
        #ocversion: ["4.6","4.7","4.8","4.9"]
        ocversion: ${{ fromJSON(needs.generate_matrix.outputs.versions) }}
        catalog: 
          - catalog: "redhat-operators"
            image: "registry.redhat.io/redhat/redhat-operator-index"
          - catalog: "certified-operators"
            image: "registry.redhat.io/redhat/certified-operator-index"
          - catalog: "redhat-marketplace"
            image: "registry.redhat.io/redhat/redhat-marketplace-index"
          - catalog: "community-operators"
            image: "registry.redhat.io/redhat/community-operator-index"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false 
          fetch-depth: 0 
          ref: main
          
      - name: Fix repo
        run:  git config --global --add safe.directory /github/workspace
        
      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "${{ matrix.ocversion }}"

      - name: Install SQlite
        run: sudo apt install sqlite3
          
      - name: Print out OC client version
        run: oc version 

      - name: Create pull-secret
        env:
          PULLSECRET: ${{ secrets.QUAY }}
        run: echo "$PULLSECRET" > pull-secret.json 
        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%s)"        

      - name: Get current date formated
        env:
          timestamp: ${{ steps.date.outputs.date }}         
        id: dateformated
        run: echo "::set-output name=dateformated::$(date --date="@$timestamp" '+%Y%m%d%H%M')"    
        
      - name: Catalog Build and Push to Quay
        env:
          dateformated: ${{ steps.dateformated.outputs.dateformated }}   
        run: |
          case "${{ matrix.ocversion }}" in
            4.5|4.6|4.7)
              oc adm catalog build \
                --appregistry-org="${{ matrix.catalog.catalog }}" \
                --from=registry.redhat.io/openshift4/ose-operator-registry:v${{ matrix.ocversion }} \
                --to=quay.io/mvalledi/olm-cicd:v${{ matrix.ocversion }}-${{ matrix.catalog.catalog }}-${dateformated} \
                --filter-by-os=linux/amd64 \
                -a pull-secret.json
            ;;
            *)
              oc image mirror \
                ${{ matrix.catalog.image }}:v${{ matrix.ocversion }} \
                quay.io/mvalledi/olm-cicd:v${{ matrix.ocversion }}-${{ matrix.catalog.catalog }}-${dateformated} \
                --filter-by-os=linux/amd64 \
                -a pull-secret.json
            ;;
          esac    
      
      - name: Catalog Mirror
        env:
          dateformated: ${{ steps.dateformated.outputs.dateformated }}         
        run: |
          rm -Rf *-rh; mkdir database-rh
          oc adm catalog mirror \
            quay.io/mvalledi/olm-cicd:v${{ matrix.ocversion }}-${{ matrix.catalog.catalog }}-${dateformated}  \
            myregistry.com \
            --manifests-only  \
            --to-manifests="$(pwd)/manifest-rh" \
            --path="/:$(pwd)/database-rh" \
            --filter-by-os=linux/amd64 \
            -a pull-secret.json
            
      - name: Extract operators versions from bundles.db
        env:
          timestamp: ${{ steps.date.outputs.date }}
          dateformated: ${{ steps.dateformated.outputs.dateformated }}         
        run: |
          dirfile=$(date --date="@$timestamp" '+%Y')/$(date --date="@$timestamp" '+%m')
          mkdir -p $dirfile
          listfile="$dirfile/v${{ matrix.ocversion }}-${{ matrix.catalog.catalog }}-$(date --date="@$timestamp" '+%Y%m%d%H%M').txt"
          echo "# IMAGE: quay.io/mvalledi/olm-cicd:v${{ matrix.ocversion }}-${{ matrix.catalog.catalog }}-${dateformated}" > $listfile
          sqlite3 database-rh/bundles.db "select operatorbundle_name from related_image group by operatorbundle_name;" 2>/dev/null >> $listfile || \
          sqlite3 database-rh/database/index.db "select operatorbundle_name from related_image group by operatorbundle_name;" 2>/dev/null >> $listfile
          cat $listfile
          rm -Rf *-rh; mkdir database-rh
   
      - uses: actions/checkout@v3
      - run: |
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m " Added operators list for v${{ matrix.ocversion }}-${{ matrix.catalog.catalog }}-${{ steps.dateformated.outputs.dateformated }} "
          git push
 
#      - name: Commit & Push operator list             
#        uses: github-actions-x/commit@v2.9 
#        with:
#          branch: main
#          message: " Added operators list for v${{ matrix.ocversion }}-${{ matrix.catalog.catalog }}-${{ steps.dateformated.outputs.dateformated }} "
